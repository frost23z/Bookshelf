import com.frost23z.bookshelf.domain.models.Role;

CREATE TABLE mapperBooksContributors (
    bookId INTEGER NOT NULL,
    contributorId INTEGER NOT NULL,
    role INTEGER AS Role NOT NULL,
    PRIMARY KEY (bookId, contributorId),
    FOREIGN KEY (bookId) REFERENCES books(id) ON DELETE CASCADE,
    FOREIGN KEY (contributorId) REFERENCES contributors(id) ON DELETE CASCADE
);

bookContributors:
SELECT contributors.*, mapperBooksContributors.role
FROM contributors
JOIN mapperBooksContributors ON contributors.id = mapperBooksContributors.contributorId
WHERE mapperBooksContributors.bookId = :bookId;

getBooksByContributorId:
SELECT books.*
FROM books
JOIN mapperBooksContributors ON books.id = mapperBooksContributors.bookId
WHERE mapperBooksContributors.contributorId = :contributorId;

insertBookContributor:
INSERT INTO mapperBooksContributors(bookId, contributorId, role)
VALUES (:bookId, :contributorId, :role);

deleteBookContributor:
DELETE FROM mapperBooksContributors
WHERE bookId = :bookId AND contributorId = :contributorId;